import requests
import json
import sys

# Function to get energy consumption data
def get_energy_consumption(city):
    url = 'https://api.openei.org/utility_rates?version=latest&format=json&detail=full&address=' + city
    response = requests.get(url)
    data = json.loads(response.text)
    if 'items' in data:
        for item in data['items']:
            if 'rate' in item:
                return item['rate']
    return ''

# Function to get waste management data
def get_waste_management(city):
    url = 'https://data.opendatasoft.com/api/records/1.0/search/?dataset=us-cities-data&q=' + city
    response = requests.get(url)
    data = json.loads(response.text)
    if 'records' in data and data['nhits'] > 0:
        record = data['records'][0]
        if 'fields' in record:
            fields = record['fields']
            return fields.get('total_waste_tons_per_year', '')
    return ''

# Function to get population data
def get_population(city):
    url = 'http://api.population.io/1.0/population/2019/' + city + '/?format=json'
    response = requests.get(url)
    data = json.loads(response.text)
    if 'total_population' in data:
        return data['total_population']
    return ''

# Function to get latitude and longitude for a given city using Google Maps API
def get_lat_long(city):
    url = 'https://maps.googleapis.com/maps/api/geocode/json?address=' + city
    response = requests.get(url)
    data = json.loads(response.text)
    if 'results' in data and len(data['results']) > 0:
        result = data['results'][0]
        if 'geometry' in result and 'location' in result['geometry']:
            location = result['geometry']['location']
            return location.get('lat', ''), location.get('lng', '')
    return '', ''

# Main function to process the input file and output results to a text file
def main(input_file, output_file):
    with open(input_file, 'r') as f:
        cities = f.readlines()
        cities = [city.strip() for city in cities]
    
    with open(output_file, 'w') as f:
        f.write('City,Population,Energy Consumption,Waste Management\n')
        for city in cities:
            lat, lng = get_lat_long(city)
            energy_consumption = get_energy_consumption(str(lat) + ',' + str(lng))
            population = get_population(city)
            waste_management = get_waste_management(city)
            f.write(city + ',' + population + ',' + energy_consumption + ',' + waste_management + '\n')

if __name__ == '__main__':
    if len(sys.argv) < 3:
        print('Usage: python carbonfootprint.py <input_file> <output_file>')
        sys.exit(1)
    input_file = sys.argv[1]
    output_file = sys.argv[2]
    main(input_file, output_file)
